'''
Гошe необходимо оценить сложность статьи.
Он придумал такой метод оценки: берётся
случайное предложение из текста и в нём ищется
самое длинное слово. Его длина и будет условной сложностью статьи.

Формат ввода:
В первой строке дана длина текста L (1 ≤ L ≤ 105).

В следующей строке записан текст,
состоящий из строчных латинских букв и пробелов.
Слово —– последовательность букв, не разделённых пробелами.
Пробелы могут стоять в самом начале строки и в самом её конце.
Текст заканчивается переносом строки,
этот символ не включается в число остальных L символов.

Формат вывода:
В первой строке выведите самое длинное слово.
Во второй строке выведите его длину.
Если подходящих слов несколько, выведите то,
которое встречается раньше.
'''


def longest_word(text_length=None, text=None):
    word = max(text, key=len)
    length = len(word)
    return f'{word}\n{length}'


# print(longest_word(int(input()), list(map(str, input().split()))))

assert longest_word(19, ['i', 'love', 'segment', 'tree']) == 'segment\n7'
assert longest_word(21, ['frog', 'jumps', 'from', 'river']) == 'jumps\n5'
