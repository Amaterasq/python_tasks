'''
Алла получила задание, связанное с мониторингом работы
различных серверов. Требуется понять, сколько времени
обрабатываются определённые запросы на конкретных серверах.
Эту информацию нужно хранить в матрице, где номер столбца
соответствуют идентификатору запроса, а номер
строки — идентификатору сервера. Алла перепутала строки
и столбцы местами. С каждым бывает. Помогите ей исправить баг.

Есть матрица размера m x n. Нужно написать функцию,
которая её транспонирует.
Транспонированная матрица получается из исходной заменой
строк на столбцы.

Формат ввода:
В первой строке задано число n — количество строк матрицы.
Во второй строке задано m — число столбцов, m и n не
превосходят 1000. В следующих n строках задана матрица.
Числа в ней не превосходят по модулю 1000.

Формат вывода:
Напечатайте транспонированную матрицу в том же формате,
который задан во входных данных. Каждая строка матрицы
выводится на отдельной строке, элементы разделяются пробелами.
'''


# n, m = int(input()), int(input())  # число строк и столбцов
# matrix = [input().split(" ") for _ in range(n)]


def matrix_translation(matrix):
    reverse_matrix = list(zip(*matrix))
    return reverse_matrix


# for i in matrix_translation(matrix):
#     print(' '.join(i))


assert matrix_translation(
    [
        [1, 2, 3],
        [0, 2, 6],
        [7, 4, 1],
        [2, 7, 0]
    ]) == [
        (1, 0, 7, 2),
        (2, 2, 4, 7),
        (3, 6, 1, 0)]

assert matrix_translation(
    [
        [-7, -1, 0, -4, -9],
        [5, -1, 2, 2, 9],
        [3, 1, -8, -1, -7],
        [9, 0, 8, -8, -1],
        [2, 4, 5, 2, 8],
        [-7, 10, 0, -4, -8],
        [-3, 10, -7, 10, 3],
        [1, 6, -7, -5, 9],
        [-1, 9, 9, 1, 9]
    ]) == [
        (-7, 5, 3, 9, 2, -7, -3, 1, -1),
        (-1, -1, 1, 0, 4, 10, 10, 6, 9),
        (0, 2, -8, 8, 5, 0, -7, -7, 9),
        (-4, 2, -1, -8, 2, -4, 10, -5, 1),
        (-9, 9, -7, -1, 8, -8, 3, 9, 9)]
