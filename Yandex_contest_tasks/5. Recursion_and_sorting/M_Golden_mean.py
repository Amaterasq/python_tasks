'''
Задача повышенной сложности
На каждом острове в архипелаге Алгосы живёт какое-то количество
людей или же остров необитаем (тогда на острове живёт 0 людей).
Пусть на i-м острове численность населения составляет ai.
Тимофей захотел найти медиану среди всех значений численности
населения.

Определение: Медиана
(https://ru.wikipedia.org/wiki/Медиана_(статистика))
массива чисел a_i —– это такое число, что половина чисел из
массива не больше него, а другая половина не меньше.
В общем случае медиану массива можно найти, отсортировав
числа и взяв среднее из них. Если количество чисел чётно,
то возьмём в качестве медианы полусумму соседних средних
чисел, (a[n/2] + a[n/2 + 1])/2.

У Тимофея уже есть отдельно данные по северной части
архипелага и по южной, причём значения численности населения
в каждой группе отсортированы по неубыванию.

Определите медианную численность населения по всем островам Алгосов.

Подсказка: Если n –— число островов в северной части архипелага,
а m –— в южной, то ваше решение должно работать за O(log(n+m)).

Формат ввода:
В первой строке записано натуральное число n, во
второй —– натуральное число m. Они не превосходят 10 000.

Далее в строку через пробел записаны n целых неотрицательных чисел,
каждое из которых не превосходит 10 000, –— значения численности
населения в северной части Алгосов.

В последней строке через пробел записаны m целых неотрицательных
чисел, каждое из которых не превосходит 10 000 –— значения
численности населения в южной части Алгосов.

Значения в третьей и четвёртой строках упорядочены по неубыванию.

Формат вывода:
Нужно вывести одной число — найденную медиану.
'''


def find_common_median(a, b, a_len, b_len):
    size = (a_len + b_len) // 2
    if (a_len + b_len) % 2 == 0:
        even_size = True
    else:
        size += 1
        even_size = False

    counter_a = 0
    counter_b = 0
    median = 0

    for i in range(size):
        # Остались элементы только в массиве b
        if (counter_a >= a_len):
            counter_b = counter_b + (size - i)
            median = b[counter_b - 1]
            break
        # Остались элементы только в массиве a
        if (counter_b >= b_len):
            counter_a = counter_a + (size - i)
            median = a[counter_a - 1]
            break
        a_i = a[counter_a]
        b_i = b[counter_b]
        if a_i <= b_i:
            median = a_i
            counter_a += 1
        else:
            median = b_i
            counter_b += 1

    if even_size:
        if counter_a < a_len:
            next_a = a[counter_a]
        else:
            next_a = a[counter_a - 2]
        if counter_b < b_len:
            next_b = b[counter_b]
        else:
            next_b = b[counter_b - 2]

        if next_a < median:
            next_a = float('+inf')
        if next_b < median:
            next_b = float('+inf')

        median = (median + min(next_a, next_b)) / 2
    return median


def main():
    n = int(input())
    m = int(input())
    north = [int(x) for x in input().split()]
    south = [int(x) for x in input().split()]
    r = find_common_median(north, south, n, m)
    print(r, end='')


if __name__ == '__main__':
    main()
